package com.sleepbank.screens;

import java.util.Scanner;

import com.sleepbank.beans.SleepAccount;
import com.sleepbank.beans.User;
import com.sleepbank.daos.AccountDao;
import com.sleepbank.daos.UserDao;
import com.sleepbank.util.AppState;

public class QualityBoostingHomepage implements Screen {
	
	public static final QualityBoostingHomepage qbh=new QualityBoostingHomepage();
	private Scanner scan=new Scanner(System.in);
	private User u=new User();
	
	
	
	@Override
	public Screen start() {
		
		u=AppState.state.getCurrentUser();
		System.out.println("Select an option:");
		System.out.println("(1) Make a deposit");
		System.out.println("(2) Make a withdrawal");
		System.out.println("(3) View account balance");
		System.out.println("(4) View transaction history");
		System.out.println("(5) Open a Standard Account");
		System.out.println("(6) Transfer sleep power to another user");
		System.out.println("(7) Logout");
		String choice=scan.nextLine().trim();
		if(choice.equals("1") || choice.equals("2") || choice.equals("3") || choice.equals("4") || 
			choice.equals("5") || choice.equals("6") || choice.equals("7")) {
			
			int key=Integer.parseInt(choice);
			switch (key) {
			case 1:
				
				return DepositScreen.ds;
				
			case 2:
				
				return WithdrawalScreen.ws;
				
			case 3:
				
				u.getMyAccounts().get(0).viewAccountBalance();
				break;
				
			case 4:
				
				break;
			case 5:
				System.out.println("You have selected to open a Standard Account. Type 'standard' to proceed.");
				if(scan.nextLine().trim().toLowerCase().equals("standard")) {
					// create standard account
					SleepAccount newAccountS=new SleepAccount();
					newAccountS.setTotalSleepPower(0);
					newAccountS.setType("standard");
					u.getMyAccounts().add(newAccountS);
					AccountDao.currentAccountDao.createAccount(u.getUsername(), newAccountS);
					return StandardAndQualityHomepage.saqh;
					
				}
				else {
					return QualityBoostingHomepage.qbh;
				}
			case 6:
				
				System.out.println("Enter the username of the person you want to transfer sleep power to: ");
				String username=scan.nextLine().trim();
				User to=new User();
				to=UserDao.currentUserDao.adminGetUser(username);
				if(to==null) {
					System.out.println("Cannot find user with that username.");
					return qbh;
				}
				if(to.getMyAccounts().size()==1) {
					// only has one account to deposit money into
					System.out.println("How much sleep power do you wish to deposit in " + to.getFirstname() + "'s account? ");
					String amount=scan.nextLine().trim();
					try {
						double withdrawn=u.getMyAccounts().get(0).withdraw(Double.parseDouble(amount));
						if(withdrawn==0) {
							return qbh;
						}
						to.getMyAccounts().get(0).deposit(withdrawn);
						
					} catch (Exception e) {
						
						System.out.println("Invalid input.");
						
					}
					
				}
				else {
					// has both
					System.out.println("Do you want to deposit sleep power in their (1) Standard Account or (2) Quality Booster Account? ");
					String accountChoice=scan.nextLine();
					System.out.println("How much sleep power do you want to deposit? ");
					double withdrawn=0;
					try {
						withdrawn=u.getMyAccounts().get(0).withdraw(Double.parseDouble(scan.nextLine().trim()));
						if(withdrawn==0) {
							return qbh;
						}
					} catch (Exception e) {
						System.out.println("Invalid input.");
					}
					if(accountChoice.equals("1")) {
						for(SleepAccount sa : to.getMyAccounts()) {
							if(sa.getType().equals("standard")) {
								sa.deposit(withdrawn);
								break;
							}
						}
						
					}
					else if(accountChoice.equals("2")) {
						for(SleepAccount sa : to.getMyAccounts()) {
							if(sa.getType().equals("quality booster")) {
								sa.deposit(withdrawn);
								break;
							}
						}
						
					}
					else {
						System.out.println("Invalid input.");
					}	
				}
				
				break;
			case 7:
				
				System.out.println("Logging out.");
				AppState.state.setCurrentUser(null);
				return Homescreen.hs;
				
			}
			
			
		}
		else {
			System.out.println("Invalid input.");
		}

		return qbh;
	}
	
	

}
